{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elohim Mickael\\\\talentmatch\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\n\n// Créer le contexte\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Hook personnalisé pour utiliser le contexte\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n\n// Fournisseur du contexte\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userType, setUserType] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Fonction pour se connecter\n  const login = async (email, password) => {\n    try {\n      if (!email || !password) {\n        throw new Error(\"Email et mot de passe requis\");\n      }\n\n      // Déterminer le type d'utilisateur basé sur l'email\n      const type = email.toLowerCase().includes('recrut') ? 'recruiter' : 'candidate';\n\n      // Créer un utilisateur fictif\n      const user = {\n        uid: 'user-' + Date.now(),\n        email: email,\n        type: type\n      };\n\n      // Stocker les informations dans localStorage pour la persistance\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Mettre à jour l'état\n      setCurrentUser(user);\n      setUserType(type);\n      return {\n        user,\n        type\n      };\n    } catch (error) {\n      console.error(\"Erreur de connexion:\", error);\n      throw error;\n    }\n  };\n\n  // Fonction pour se déconnecter\n  const logout = () => {\n    localStorage.removeItem('user');\n    setCurrentUser(null);\n    setUserType(null);\n  };\n\n  // Vérifier si l'utilisateur est déjà connecté au chargement\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      setCurrentUser(user);\n      setUserType(user.type);\n    }\n    setLoading(false);\n  }, []);\n\n  // Valeurs à fournir dans le contexte\n  const value = {\n    currentUser,\n    userType,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"UqATS9vKTGnGY288JAaGQoEcoLw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","userType","setUserType","loading","setLoading","login","email","password","Error","type","toLowerCase","includes","user","uid","Date","now","localStorage","setItem","JSON","stringify","error","console","logout","removeItem","storedUser","getItem","parse","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Elohim Mickael/talentmatch/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\n// Créer le contexte\r\nconst AuthContext = createContext();\r\n\r\n// Hook personnalisé pour utiliser le contexte\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\n// Fournisseur du contexte\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [userType, setUserType] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fonction pour se connecter\r\n  const login = async (email, password) => {\r\n    try {\r\n      if (!email || !password) {\r\n        throw new Error(\"Email et mot de passe requis\");\r\n      }\r\n      \r\n      // Déterminer le type d'utilisateur basé sur l'email\r\n      const type = email.toLowerCase().includes('recrut') ? 'recruiter' : 'candidate';\r\n      \r\n      // Créer un utilisateur fictif\r\n      const user = {\r\n        uid: 'user-' + Date.now(),\r\n        email: email,\r\n        type: type\r\n      };\r\n      \r\n      // Stocker les informations dans localStorage pour la persistance\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      // Mettre à jour l'état\r\n      setCurrentUser(user);\r\n      setUserType(type);\r\n      \r\n      return { user, type };\r\n    } catch (error) {\r\n      console.error(\"Erreur de connexion:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Fonction pour se déconnecter\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    setCurrentUser(null);\r\n    setUserType(null);\r\n  };\r\n\r\n  // Vérifier si l'utilisateur est déjà connecté au chargement\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    \r\n    if (storedUser) {\r\n      const user = JSON.parse(storedUser);\r\n      setCurrentUser(user);\r\n      setUserType(user.type);\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Valeurs à fournir dans le contexte\r\n  const value = {\r\n    currentUser,\r\n    userType,\r\n    login,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,SAASO,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAOL,UAAU,CAACG,WAAW,CAAC;AAChC;;AAEA;AAAAE,EAAA,CAJgBD,OAAO;AAKvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMiB,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,IAAI,CAACD,KAAK,IAAI,CAACC,QAAQ,EAAE;QACvB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;;MAEA;MACA,MAAMC,IAAI,GAAGH,KAAK,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC,GAAG,WAAW,GAAG,WAAW;;MAE/E;MACA,MAAMC,IAAI,GAAG;QACXC,GAAG,EAAE,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;QACzBT,KAAK,EAAEA,KAAK;QACZG,IAAI,EAAEA;MACR,CAAC;;MAED;MACAO,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;;MAElD;MACAZ,cAAc,CAACY,IAAI,CAAC;MACpBV,WAAW,CAACO,IAAI,CAAC;MAEjB,OAAO;QAAEG,IAAI;QAAEH;MAAK,CAAC;IACvB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBN,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/BvB,cAAc,CAAC,IAAI,CAAC;IACpBE,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;;EAED;EACAb,SAAS,CAAC,MAAM;IACd,MAAMmC,UAAU,GAAGR,YAAY,CAACS,OAAO,CAAC,MAAM,CAAC;IAE/C,IAAID,UAAU,EAAE;MACd,MAAMZ,IAAI,GAAGM,IAAI,CAACQ,KAAK,CAACF,UAAU,CAAC;MACnCxB,cAAc,CAACY,IAAI,CAAC;MACpBV,WAAW,CAACU,IAAI,CAACH,IAAI,CAAC;IACxB;IAEAL,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMuB,KAAK,GAAG;IACZ5B,WAAW;IACXE,QAAQ;IACRI,KAAK;IACLiB,MAAM;IACNnB;EACF,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAACmC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA9B,QAAA,EAChC,CAACM,OAAO,IAAIN;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B;AAAClC,GAAA,CAtEeF,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}