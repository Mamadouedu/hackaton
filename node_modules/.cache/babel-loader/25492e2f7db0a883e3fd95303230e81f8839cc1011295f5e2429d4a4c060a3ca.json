{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elohim Mickael\\\\talentmatch\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userType, setUserType] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Simuler une base de données d'utilisateurs\n  const mockUsers = {\n    'candidate@example.com': {\n      email: 'candidate@example.com',\n      type: 'candidate',\n      profile: {\n        firstName: 'Jean',\n        lastName: 'Dupont',\n        completedProfile: false\n      }\n    },\n    'recruiter@example.com': {\n      email: 'recruiter@example.com',\n      type: 'recruiter',\n      profile: {\n        companyName: 'TechCorp',\n        fullName: 'Martin Dupont'\n      }\n    }\n  };\n  useEffect(() => {\n    // Vérifier si un utilisateur est déjà connecté dans le localStorage\n    const storedUser = localStorage.getItem('currentUser');\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      setCurrentUser(user);\n      setUserType(user.type);\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    // Simulation de la connexion\n    const user = mockUsers[email];\n    if (user) {\n      setCurrentUser(user);\n      setUserType(user.type);\n\n      // Stocker l'utilisateur dans le localStorage\n      localStorage.setItem('currentUser', JSON.stringify(user));\n      return user;\n    } else {\n      throw new Error('Identifiants incorrects');\n    }\n  };\n  const signupCandidate = async candidateData => {\n    // Simulation de l'inscription candidat\n    const newUser = {\n      ...candidateData,\n      type: 'candidate',\n      profile: {\n        ...candidateData,\n        completedProfile: false\n      }\n    };\n\n    // Simuler l'ajout à la base de données\n    mockUsers[newUser.email] = newUser;\n\n    // Stocker l'utilisateur \n    setCurrentUser(newUser);\n    setUserType('candidate');\n    localStorage.setItem('currentUser', JSON.stringify(newUser));\n    return newUser;\n  };\n  const signupRecruiter = async recruiterData => {\n    // Simulation de l'inscription recruteur\n    const newUser = {\n      ...recruiterData,\n      type: 'recruiter',\n      profile: {\n        ...recruiterData\n      }\n    };\n\n    // Simuler l'ajout à la base de données\n    mockUsers[newUser.email] = newUser;\n\n    // Stocker l'utilisateur \n    setCurrentUser(newUser);\n    setUserType('recruiter');\n    localStorage.setItem('currentUser', JSON.stringify(newUser));\n    return newUser;\n  };\n  const completeLinkedInProfile = async profileData => {\n    // Mettre à jour le profil utilisateur\n    const updatedUser = {\n      ...currentUser,\n      profile: {\n        ...currentUser.profile,\n        ...profileData,\n        completedProfile: true\n      }\n    };\n    setCurrentUser(updatedUser);\n    localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n    return updatedUser;\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    setUserType(null);\n    localStorage.removeItem('currentUser');\n  };\n  const value = {\n    currentUser,\n    userType,\n    loading,\n    login,\n    logout,\n    signupCandidate,\n    signupRecruiter,\n    completeLinkedInProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"UqATS9vKTGnGY288JAaGQoEcoLw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","userType","setUserType","loading","setLoading","mockUsers","email","type","profile","firstName","lastName","completedProfile","companyName","fullName","storedUser","localStorage","getItem","user","JSON","parse","login","password","setItem","stringify","signupCandidate","candidateData","newUser","signupRecruiter","recruiterData","completeLinkedInProfile","profileData","updatedUser","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Elohim Mickael/talentmatch/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [userType, setUserType] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Simuler une base de données d'utilisateurs\r\n  const mockUsers = {\r\n    'candidate@example.com': {\r\n      email: 'candidate@example.com',\r\n      type: 'candidate',\r\n      profile: {\r\n        firstName: 'Jean',\r\n        lastName: 'Dupont',\r\n        completedProfile: false\r\n      }\r\n    },\r\n    'recruiter@example.com': {\r\n      email: 'recruiter@example.com',\r\n      type: 'recruiter',\r\n      profile: {\r\n        companyName: 'TechCorp',\r\n        fullName: 'Martin Dupont'\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Vérifier si un utilisateur est déjà connecté dans le localStorage\r\n    const storedUser = localStorage.getItem('currentUser');\r\n    if (storedUser) {\r\n      const user = JSON.parse(storedUser);\r\n      setCurrentUser(user);\r\n      setUserType(user.type);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    // Simulation de la connexion\r\n    const user = mockUsers[email];\r\n    \r\n    if (user) {\r\n      setCurrentUser(user);\r\n      setUserType(user.type);\r\n      \r\n      // Stocker l'utilisateur dans le localStorage\r\n      localStorage.setItem('currentUser', JSON.stringify(user));\r\n      \r\n      return user;\r\n    } else {\r\n      throw new Error('Identifiants incorrects');\r\n    }\r\n  };\r\n\r\n  const signupCandidate = async (candidateData) => {\r\n    // Simulation de l'inscription candidat\r\n    const newUser = {\r\n      ...candidateData,\r\n      type: 'candidate',\r\n      profile: {\r\n        ...candidateData,\r\n        completedProfile: false\r\n      }\r\n    };\r\n    \r\n    // Simuler l'ajout à la base de données\r\n    mockUsers[newUser.email] = newUser;\r\n    \r\n    // Stocker l'utilisateur \r\n    setCurrentUser(newUser);\r\n    setUserType('candidate');\r\n    localStorage.setItem('currentUser', JSON.stringify(newUser));\r\n    \r\n    return newUser;\r\n  };\r\n\r\n  const signupRecruiter = async (recruiterData) => {\r\n    // Simulation de l'inscription recruteur\r\n    const newUser = {\r\n      ...recruiterData,\r\n      type: 'recruiter',\r\n      profile: {\r\n        ...recruiterData\r\n      }\r\n    };\r\n    \r\n    // Simuler l'ajout à la base de données\r\n    mockUsers[newUser.email] = newUser;\r\n    \r\n    // Stocker l'utilisateur \r\n    setCurrentUser(newUser);\r\n    setUserType('recruiter');\r\n    localStorage.setItem('currentUser', JSON.stringify(newUser));\r\n    \r\n    return newUser;\r\n  };\r\n\r\n  const completeLinkedInProfile = async (profileData) => {\r\n    // Mettre à jour le profil utilisateur\r\n    const updatedUser = {\r\n      ...currentUser,\r\n      profile: {\r\n        ...currentUser.profile,\r\n        ...profileData,\r\n        completedProfile: true\r\n      }\r\n    };\r\n    \r\n    setCurrentUser(updatedUser);\r\n    localStorage.setItem('currentUser', JSON.stringify(updatedUser));\r\n    \r\n    return updatedUser;\r\n  };\r\n\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    setUserType(null);\r\n    localStorage.removeItem('currentUser');\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    userType,\r\n    loading,\r\n    login,\r\n    logout,\r\n    signupCandidate,\r\n    signupRecruiter,\r\n    completeLinkedInProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}