{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elohim Mickael\\\\talentmatch\\\\src\\\\components\\\\MatchingRateCircle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatchingRateCircle = ({\n  initialRate = 85,\n  maxRate = 95,\n  animated = true\n}) => {\n  _s();\n  const [rate, setRate] = useState(initialRate);\n  useEffect(() => {\n    if (animated && initialRate < maxRate) {\n      // Animer le taux de matching\n      let currentRate = initialRate;\n      const interval = setInterval(() => {\n        currentRate += 1;\n        setRate(currentRate);\n        if (currentRate >= maxRate) {\n          clearInterval(interval);\n        }\n      }, 100);\n      return () => clearInterval(interval);\n    }\n  }, [initialRate, maxRate, animated]);\n\n  // Calcul des propriétés du cercle SVG\n  const radius = 54;\n  const circumference = 2 * Math.PI * radius;\n  const offset = circumference - rate / 100 * circumference;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matching-rate-circle\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"120\",\n      height: \"120\",\n      viewBox: \"0 0 120 120\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"60\",\n        cy: \"60\",\n        r: radius,\n        fill: \"none\",\n        stroke: \"#2a2a40\",\n        strokeWidth: \"12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"60\",\n        cy: \"60\",\n        r: radius,\n        fill: \"none\",\n        stroke: \"#8c52ff\",\n        strokeWidth: \"12\",\n        strokeDasharray: circumference,\n        strokeDashoffset: offset,\n        transform: \"rotate(-90 60 60)\" // Pour que le cercle commence en haut\n        ,\n        strokeLinecap: \"round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"60\",\n        y: \"60\",\n        textAnchor: \"middle\",\n        dominantBaseline: \"middle\",\n        fill: \"white\",\n        fontSize: \"24px\",\n        fontWeight: \"bold\",\n        children: [rate, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchingRateCircle, \"pVvPB87Ws61l2hhVUoAlvmVts14=\");\n_c = MatchingRateCircle;\nexport default MatchingRateCircle;\nvar _c;\n$RefreshReg$(_c, \"MatchingRateCircle\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MatchingRateCircle","initialRate","maxRate","animated","_s","rate","setRate","currentRate","interval","setInterval","clearInterval","radius","circumference","Math","PI","offset","className","children","width","height","viewBox","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","strokeDashoffset","transform","strokeLinecap","x","y","textAnchor","dominantBaseline","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/Elohim Mickael/talentmatch/src/components/MatchingRateCircle.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst MatchingRateCircle = ({ initialRate = 85, maxRate = 95, animated = true }) => {\r\n  const [rate, setRate] = useState(initialRate);\r\n  \r\n  useEffect(() => {\r\n    if (animated && initialRate < maxRate) {\r\n      // Animer le taux de matching\r\n      let currentRate = initialRate;\r\n      const interval = setInterval(() => {\r\n        currentRate += 1;\r\n        setRate(currentRate);\r\n        if (currentRate >= maxRate) {\r\n          clearInterval(interval);\r\n        }\r\n      }, 100);\r\n      \r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [initialRate, maxRate, animated]);\r\n  \r\n  // Calcul des propriétés du cercle SVG\r\n  const radius = 54;\r\n  const circumference = 2 * Math.PI * radius;\r\n  const offset = circumference - (rate / 100) * circumference;\r\n  \r\n  return (\r\n    <div className=\"matching-rate-circle\">\r\n      <svg width=\"120\" height=\"120\" viewBox=\"0 0 120 120\">\r\n        {/* Cercle de fond */}\r\n        <circle \r\n          cx=\"60\" \r\n          cy=\"60\" \r\n          r={radius} \r\n          fill=\"none\" \r\n          stroke=\"#2a2a40\" \r\n          strokeWidth=\"12\" \r\n        />\r\n        \r\n        {/* Cercle de progression */}\r\n        <circle \r\n          cx=\"60\" \r\n          cy=\"60\" \r\n          r={radius} \r\n          fill=\"none\" \r\n          stroke=\"#8c52ff\" \r\n          strokeWidth=\"12\" \r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={offset}\r\n          transform=\"rotate(-90 60 60)\" // Pour que le cercle commence en haut\r\n          strokeLinecap=\"round\"\r\n        />\r\n        \r\n        {/* Texte du pourcentage */}\r\n        <text \r\n          x=\"60\" \r\n          y=\"60\" \r\n          textAnchor=\"middle\" \r\n          dominantBaseline=\"middle\" \r\n          fill=\"white\" \r\n          fontSize=\"24px\" \r\n          fontWeight=\"bold\"\r\n        >\r\n          {rate}%\r\n        </text>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchingRateCircle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,WAAW,GAAG,EAAE;EAAEC,OAAO,GAAG,EAAE;EAAEC,QAAQ,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EAClF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACI,WAAW,CAAC;EAE7CL,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,IAAIF,WAAW,GAAGC,OAAO,EAAE;MACrC;MACA,IAAIK,WAAW,GAAGN,WAAW;MAC7B,MAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCF,WAAW,IAAI,CAAC;QAChBD,OAAO,CAACC,WAAW,CAAC;QACpB,IAAIA,WAAW,IAAIL,OAAO,EAAE;UAC1BQ,aAAa,CAACF,QAAQ,CAAC;QACzB;MACF,CAAC,EAAE,GAAG,CAAC;MAEP,OAAO,MAAME,aAAa,CAACF,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAACP,WAAW,EAAEC,OAAO,EAAEC,QAAQ,CAAC,CAAC;;EAEpC;EACA,MAAMQ,MAAM,GAAG,EAAE;EACjB,MAAMC,aAAa,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGH,MAAM;EAC1C,MAAMI,MAAM,GAAGH,aAAa,GAAIP,IAAI,GAAG,GAAG,GAAIO,aAAa;EAE3D,oBACEb,OAAA;IAAKiB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnClB,OAAA;MAAKmB,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC,KAAK;MAACC,OAAO,EAAC,aAAa;MAAAH,QAAA,gBAEjDlB,OAAA;QACEsB,EAAE,EAAC,IAAI;QACPC,EAAE,EAAC,IAAI;QACPC,CAAC,EAAEZ,MAAO;QACVa,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eAGF/B,OAAA;QACEsB,EAAE,EAAC,IAAI;QACPC,EAAE,EAAC,IAAI;QACPC,CAAC,EAAEZ,MAAO;QACVa,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAC,IAAI;QAChBK,eAAe,EAAEnB,aAAc;QAC/BoB,gBAAgB,EAAEjB,MAAO;QACzBkB,SAAS,EAAC,mBAAmB,CAAC;QAAA;QAC9BC,aAAa,EAAC;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eAGF/B,OAAA;QACEoC,CAAC,EAAC,IAAI;QACNC,CAAC,EAAC,IAAI;QACNC,UAAU,EAAC,QAAQ;QACnBC,gBAAgB,EAAC,QAAQ;QACzBd,IAAI,EAAC,OAAO;QACZe,QAAQ,EAAC,MAAM;QACfC,UAAU,EAAC,MAAM;QAAAvB,QAAA,GAEhBZ,IAAI,EAAC,GACR;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAlEIJ,kBAAkB;AAAAyC,EAAA,GAAlBzC,kBAAkB;AAoExB,eAAeA,kBAAkB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}