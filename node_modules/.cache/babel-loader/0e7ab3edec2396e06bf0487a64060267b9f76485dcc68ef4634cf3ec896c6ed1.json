{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elohim Mickael\\\\talentmatch\\\\src\\\\pages\\\\LinkedInCallback.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LinkedInCallback = () => {\n  _s();\n  const [status, setStatus] = useState('loading');\n  const [message, setMessage] = useState('Connexion avec LinkedIn en cours...');\n  const navigate = useNavigate();\n  const {\n    signupCandidate\n  } = useAuth();\n  useEffect(() => {\n    const simulateLinkedInAuth = async () => {\n      try {\n        // Dans un scénario réel, vous valideriez les identifiants auprès de LinkedIn\n        const mockLinkedInData = {\n          email: 'jean.dupont.linkedin@example.com',\n          firstName: 'Jean',\n          lastName: 'Dupont',\n          type: 'candidate'\n        };\n\n        // Inscription du candidat\n        await signupCandidate(mockLinkedInData);\n        setStatus('success');\n        setMessage('Connexion LinkedIn réussie! Redirection en cours...');\n\n        // Rediriger vers la page d'analyse de CV\n        setTimeout(() => {\n          navigate('/cv-analysis');\n        }, 1500);\n      } catch (error) {\n        console.error('Erreur lors de la connexion LinkedIn:', error);\n        setStatus('error');\n        setMessage('Échec de la connexion LinkedIn. Veuillez réessayer.');\n      }\n    };\n    simulateLinkedInAuth();\n  }, [navigate, signupCandidate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"linkedin-callback-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"linkedin-callback-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `linkedin-callback-status ${status}`,\n          children: [status === 'loading' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), status === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success-icon\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), status === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-icon\",\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: status === 'loading' ? 'Traitement en cours' : status === 'success' ? 'Connexion réussie' : 'Erreur de connexion'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), status === 'error' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"retry-button\",\n          onClick: () => navigate('/candidate-signup'),\n          children: \"R\\xE9essayer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LinkedInCallback, \"9808sW8bVhHNHNA6fJANpis0+YQ=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = LinkedInCallback;\nexport default LinkedInCallback;\nvar _c;\n$RefreshReg$(_c, \"LinkedInCallback\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useAuth","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","LinkedInCallback","_s","status","setStatus","message","setMessage","navigate","signupCandidate","simulateLinkedInAuth","mockLinkedInData","email","firstName","lastName","type","setTimeout","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Elohim Mickael/talentmatch/src/pages/LinkedInCallback.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport Navbar from '../components/Navbar';\r\n\r\nconst LinkedInCallback = () => {\r\n  const [status, setStatus] = useState('loading');\r\n  const [message, setMessage] = useState('Connexion avec LinkedIn en cours...');\r\n  const navigate = useNavigate();\r\n  const { signupCandidate } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const simulateLinkedInAuth = async () => {\r\n      try {\r\n        // Dans un scénario réel, vous valideriez les identifiants auprès de LinkedIn\r\n        const mockLinkedInData = {\r\n          email: 'jean.dupont.linkedin@example.com',\r\n          firstName: 'Jean',\r\n          lastName: 'Dupont',\r\n          type: 'candidate'\r\n        };\r\n\r\n        // Inscription du candidat\r\n        await signupCandidate(mockLinkedInData);\r\n\r\n        setStatus('success');\r\n        setMessage('Connexion LinkedIn réussie! Redirection en cours...');\r\n        \r\n        // Rediriger vers la page d'analyse de CV\r\n        setTimeout(() => {\r\n          navigate('/cv-analysis');\r\n        }, 1500);\r\n\r\n      } catch (error) {\r\n        console.error('Erreur lors de la connexion LinkedIn:', error);\r\n        setStatus('error');\r\n        setMessage('Échec de la connexion LinkedIn. Veuillez réessayer.');\r\n      }\r\n    };\r\n\r\n    simulateLinkedInAuth();\r\n  }, [navigate, signupCandidate]);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"linkedin-callback-container\">\r\n        <div className=\"linkedin-callback-card\">\r\n          <div className={`linkedin-callback-status ${status}`}>\r\n            {status === 'loading' && (\r\n              <div className=\"loader\"></div>\r\n            )}\r\n            {status === 'success' && (\r\n              <div className=\"success-icon\">✓</div>\r\n            )}\r\n            {status === 'error' && (\r\n              <div className=\"error-icon\">!</div>\r\n            )}\r\n          </div>\r\n          <h2>\r\n            {status === 'loading' ? 'Traitement en cours' : \r\n             status === 'success' ? 'Connexion réussie' : \r\n             'Erreur de connexion'}\r\n          </h2>\r\n          <p>{message}</p>\r\n          {status === 'error' && (\r\n            <button \r\n              className=\"retry-button\" \r\n              onClick={() => navigate('/candidate-signup')}\r\n            >\r\n              Réessayer\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LinkedInCallback;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}